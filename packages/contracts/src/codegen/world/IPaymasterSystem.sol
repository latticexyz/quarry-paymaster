// SPDX-License-Identifier: MIT
pragma solidity >=0.8.24;

/* Autogenerated file. Do not edit manually. */

import { PackedUserOperation } from "@account-abstraction/contracts/interfaces/PackedUserOperation.sol";
import { IPaymaster } from "@account-abstraction/contracts/interfaces/IPaymaster.sol";

/**
 * @title IPaymasterSystem
 * @author MUD (https://mud.dev) by Lattice (https://lattice.xyz)
 * @dev This interface is automatically generated from the corresponding system contract. Do not edit manually.
 */
interface IPaymasterSystem {
  error PaymasterSystem_InsufficientFunds(
    address user,
    uint256 maxCost,
    uint256 availableAllowance,
    uint256 availableBalance
  );
  error PaymasterSystem_OnlyEntryPoint();

  function validatePaymasterUserOp(
    PackedUserOperation calldata userOp,
    bytes32 userOpHash,
    uint256 maxCost
  ) external returns (bytes memory context, uint256 validationData);

  function postOp(
    IPaymaster.PostOpMode mode,
    bytes calldata context,
    uint256 actualGasCost,
    uint256 actualUserOpFeePerGas
  ) external;
}
